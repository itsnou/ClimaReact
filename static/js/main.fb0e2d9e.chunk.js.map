{"version":3,"sources":["components/Header.js","components/Error.js","components/Formulario.js","components/Clima.js","App.js","reportWebVitals.js","index.js"],"names":["Header","titulo","className","href","Error","mensaje","Formulario","busqueda","guardarBusqueda","guardarConsultar","useState","error","guardarError","ciudad","pais","handleChange","event","target","name","value","onSubmit","preventDefault","trim","type","id","onChange","htmlFor","Clima","resultado","main","kelvin","parseFloat","temp","toFixed","temp_max","temp_min","App","componente","consultar","guardarResultado","useEffect","a","url","fetch","respuesta","json","cod","consultarAPI","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fb0e2d9e.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Header = ({titulo}) =>{\n    return(\n        <nav>\n            <div className=\"nav-wrapper light-blue darkken-2\">\n                <a href=\"#!\" className=\"brand-logo\">{titulo}</a>\n            </div>\n        </nav>\n    )\n}\n\nHeader.propTypes ={\n    titulo: PropTypes.string.isRequired\n}\nexport default Header;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Error = ({mensaje}) =>{\n    return(\n         <p className=\"red darken-4 error\">{mensaje}</p>\n\n    )\n}\n\nError.propTypes ={\n    mensaje: PropTypes.string.isRequired\n}\n\nexport default Error;","import React, {useState} from 'react';\nimport Error from './Error';\nimport PropTypes from 'prop-types';\n\nconst Formulario = ({busqueda, guardarBusqueda, guardarConsultar}) =>{\n\n    const [error, guardarError] = useState(false);\n\n\n    // extraer ciudad y pais\n    const {ciudad, pais} = busqueda;\n\n    // función que coloca los elementos en el state\n    const handleChange = event=> {\n        // actualizar el state\n        guardarBusqueda({\n            ...busqueda,\n            [event.target.name] : event.target.value\n        })\n    }\n\n    // Al dar submit al form\n    const handleSubmit = event =>{\n        event.preventDefault();\n\n        //validar\n        if(ciudad.trim() === '' || pais.trim() === ''){\n            guardarError(true)\n            return;\n        }\n\n        guardarError(false);\n\n\n        //pasarlo al componente principal\n        guardarConsultar(true);\n\n    }\n\n    return(\n        <form\n            onSubmit={handleSubmit}\n        >\n            {error ? <Error mensaje=\"Ambos campos son obligatorios\"/> : null}\n            \n            <div className=\"input-field col 12\">\n                <input \n                    type=\"text\"\n                    name=\"ciudad\"\n                    id={ciudad}\n                    onChange={handleChange}\n                />\n\n                <label htmlFor=\"ciudad\">Ciudad: </label>\n            </div>\n\n            <div className=\"input-field col s12\">\n                <select\n                    name=\"pais\"\n                    id=\"pais\"\n                    value={pais}\n                    onChange={handleChange}\n                >\n                    <option value=\"\">-- Seleccione un país --</option>\n                    <option value=\"US\">Estados Unidos</option>\n                    <option value=\"MX\">México</option>\n                    <option value=\"AR\">Argentina</option>\n                    <option value=\"CO\">Colombia</option>\n                    <option value=\"CR\">Costa Rica</option>\n                    <option value=\"ES\">España</option>\n                    <option value=\"PE\">Perú</option>\n                </select>\n                <label htmlFor=\"pais\">Pais: </label>\n            </div>\n            \n            <div className=\"input-field col s12\">\n                <input \n                    type=\"submit\" \n                    value=\"Buscar Clima\" \n                    className=\"waves-effect waves-light btn-large btn-block yellow accent-4\"\n\n                />\n            </div>\n        </form>\n    );\n}\n\nFormulario.propTypes ={\n    busqueda: PropTypes.object.isRequired,\n    guardarBusqueda: PropTypes.func.isRequired,\n    guardarConsultar: PropTypes.func.isRequired\n}\n\nexport default Formulario;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Clima = ({resultado}) =>{\n    // extraer los valores\n    const { name, main } = resultado;\n\n    if(!name)return null;\n\n    // Grados kelvin\n    const kelvin = 273.15;\n     \n    return(\n        <div className=\"card-panel white col s12\" >\n            <div className=\"black-text\">\n                <h2>El clima de {name} es: </h2>\n                <p className=\"temperatura\">\n                    {parseFloat( main.temp - kelvin, 10).toFixed(1)} <span> &#x2103; </span>\n                </p>\n                <p>Temperatura máxima: \n                     { parseFloat( main.temp_max - kelvin, 10).toFixed(1)} <span> &#x2103; </span>\n                </p>\n                <p>Temperatura minima: \n                     { parseFloat( main.temp_min - kelvin, 10).toFixed(1)} <span> &#x2103; </span>\n                </p>\n            </div>\n        </div>\n    )\n\n}\n\n\nClima.propTypes ={\n    resultado: PropTypes.object.isRequired\n}\nexport default Clima;","import React, {Fragment, useState, useEffect} from 'react';\nimport Header from './components/Header';\nimport Formulario from './components/Formulario';\nimport Clima from './components/Clima';\nimport Error from './components/Error';\n\n\n\n\nfunction App() {\n\n  const [busqueda, guardarBusqueda] = useState({\n    ciudad: '',\n    pais: ''\n  });\n\n  const [consultar, guardarConsultar] = useState(false);\n  const [resultado, guardarResultado] = useState({});\n  const [error, guardarError] = useState(false);\n\n\n  const {ciudad, pais} = busqueda;\n\n  useEffect(()=>{\n    const consultarAPI = async () =>{\n    if(consultar){\n        const appId= '3e4af8548e50d3d7890ffb4b45f20dbd';\n        const url = `http://api.openweathermap.org/data/2.5/weather?q=${ciudad},${pais}&appid=${appId}`        \n        const respuesta = await fetch(url);\n        const resultado = await respuesta.json();\n        guardarResultado(resultado);\n        guardarConsultar(false);\n\n        // Detecta si hubo resultados correctos en la consulta\n        if(resultado.cod === \"404\") {\n          guardarError(true)\n        }else {\n          guardarError(false);\n        }\n      }\n    }\n    consultarAPI();\n    // eslint-disable-next-line\n  },[consultar])\n\n  let componente;\n  if(error) {\n    componente= <Error mensaje=\"No hay resultados\" />\n  }else{\n    componente= <Clima resultado={resultado}/>\n  }\n  \n\n\n  return (\n    <Fragment>\n      <Header\n        titulo='Clima React App'\n      />\n        <div className=\"contenedor-form\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col m6 s12\">\n                <Formulario\n                  busqueda={busqueda}\n                  guardarBusqueda={guardarBusqueda}\n                  guardarConsultar={guardarConsultar}\n                />\n              </div>\n              <div className=\"col m6 s12\">\n                {componente}\n              </div>\n            </div>\n          </div>\n        </div>\n    </Fragment>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}